apiVersion: matlas.mongodb.com/v1
kind: ApplyDocument
metadata:
  name: users-with-password-display
  description: Example showing different password handling scenarios for user creation
resources:
  # Database user with environment variable password
  - apiVersion: matlas.mongodb.com/v1
    kind: DatabaseUser
    metadata:
      name: api-user
      labels:
        environment: production
        purpose: api-access
    spec:
      projectName: "My Project"
      username: api-user
      authDatabase: admin
      password: "${API_USER_PASSWORD}"  # Use environment variable for security
      roles:
        - roleName: readWrite
          databaseName: myapp
        - roleName: read
          databaseName: logs

  # Database user without password field (for updates or when using CLI --show-password)
  - apiVersion: matlas.mongodb.com/v1
    kind: DatabaseUser
    metadata:
      name: readonly-user
      labels:
        environment: production
        purpose: analytics
    spec:
      projectName: "My Project"
      username: readonly-user
      authDatabase: admin
      # password field omitted - can be set via CLI with --show-password flag
      roles:
        - roleName: read
          databaseName: myapp
        - roleName: read
          databaseName: analytics

---
# CLI Usage Examples for Password Display:
# 
# 1. Create user and show password in output:
#    matlas atlas users create --username test-user --project-id <project-id> \
#      --roles "readWrite@myapp" --show-password
#
# 2. Apply YAML with password display (passwords still read from env vars):
#    export API_USER_PASSWORD="secure-password-123"
#    matlas infra apply users-with-password-display.yaml
#
# 3. Update user password without showing it:
#    matlas atlas users update test-user --project-id <project-id> --password
#
# Note: The --show-password flag only affects CLI output formatting.
# YAML passwords are still sourced from environment variables for security.
